version: '3.8'

services:
  product-microservice:
    build:
      context: .
      dockerfile: ./apps/product-microservice/Dockerfile
      args:
        - APP_ENV
    command: npm run start:debug product-microservice
    ports:
      - 3001:3000
      - 9201:9229
    volumes:
      - ./:/usr/src/app
      - node_modules:/usr/src/app/node_modules/
    environment:
      DB_HOST: mysqldb
      MICROSERVICE: product-microservice
    env_file:
      - ./apps/product-microservice/.env
    depends_on:
      - mysqldb

  media-microservice:
    build:
      context: .
      dockerfile: ./apps/media-microservice/Dockerfile
      args:
        - APP_ENV
    command: npm run start:debug media-microservice
    ports:
      - 3100:3000
      - 9300:9229
    volumes:
      - ./:/usr/src/app
      - node_modules:/usr/src/app/node_modules/
    environment:
      DB_HOST: mysqldb
      MICROSERVICE: media-microservice
    env_file:
      - ./apps/media-microservice/.env
    depends_on:
      - mysqldb


  user-microservice:
    build:
      context: .
      dockerfile: ./apps/user-microservice/Dockerfile
      args:
        - APP_ENV
    command: npm run start:debug user-microservice
    ports:
      - 3002:3000
      - 9202:9229
    volumes:
      - ./:/usr/src/app
      - node_modules:/usr/src/app/node_modules/
    environment:
      DB_HOST: mysqldb
      MICROSERVICE: user-microservice
    env_file:
      - ./apps/user-microservice/.env
    depends_on:
      - mysqldb

  cart-microservice:
    build:
      context: .
      dockerfile: ./apps/cart-microservice/Dockerfile
      args:
        - APP_ENV
    command: npm run start:debug cart-microservice
    ports:
      - 3003:3000
      - 9203:9229
    volumes:
      - ./:/usr/src/app
      - node_modules:/usr/src/app/node_modules/
    environment:
      DB_HOST: mysqldb
      MICROSERVICE: cart-microservice
    env_file:
      - ./apps/cart-microservice/.env
    depends_on:
      - mysqldb

  order-microservice:
    build:
      context: .
      dockerfile: ./apps/order-microservice/Dockerfile
      args:
        - APP_ENV
    command: npm run start:debug order-microservice
    ports:
      - 3004:3000
      - 9204:9229
    volumes:
      - ./:/usr/src/app
      - node_modules:/usr/src/app/node_modules/
    environment:
      DB_HOST: mysqldb
      MICROSERVICE: order-microservice
    env_file:
      - ./apps/order-microservice/.env
    depends_on:
      - mysqldb


  # elasticsearch:
  #   image: elasticsearch:7.9.3
  #   ports:
  #     - 9200:9200
  #   environment:
  #     - discovery.type=single-node
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - elasticsearch:/usr/share/elasticsearch/data
  #   logging:
  #       driver: "json-file"
  #       options:
  #           max-size: "10k"
  #           max-file: "10"

  # logstash:
  #   build:
  #     context: .
  #     dockerfile: ./logstash/Dockerfile
  #   depends_on:
  #     - mysqldb
  #     - elasticsearch
  #     - kibana
  #   volumes:
  #     - ./logstash/pipeline/:/usr/share/logstash/pipeline/
  #     - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
  #     - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
  #     - ./logstash/config/queries/:/usr/share/logstash/config/queries/
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10k"
  #       max-file: "10"

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.9.3
  #   environment:
  #     - "ELASTICSEARCH_URL=http://elasticsearch:9200"
  #     - "SERVER_NAME=127.0.0.1"
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - elasticsearch

  mysqldb:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    volumes:
      - mysqldata:/var/lib/mysql
      - ./docker/mysql/data:/docker-entrypoint-initdb.d
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: user_microservice_db

  adminer:
    image: adminer
    ports:
      - 8080:8080
    depends_on:
      - mysqldb

volumes:
  mysqldata:
  node_modules:
  elasticsearch:
